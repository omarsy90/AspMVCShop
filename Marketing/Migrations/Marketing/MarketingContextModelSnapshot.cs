// <auto-generated />
using System;
using Marketing.DB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Marketing.Migrations.Marketing
{
    [DbContext(typeof(MarketingContext))]
    partial class MarketingContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Marketing.Models.Category", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CategoryName = "Men"
                        },
                        new
                        {
                            ID = 2,
                            CategoryName = "Women"
                        },
                        new
                        {
                            ID = 3,
                            CategoryName = "Children"
                        });
                });

            modelBuilder.Entity("Marketing.Models.Customer", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AppartmentNumber")
                        .HasColumnType("int");

                    b.Property<string>("CustomerCountry")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerFullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerState")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerStreet")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelefonNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Marketing.Models.Order", b =>
                {
                    b.Property<string>("OrderId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CustomerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("statusDeleviring")
                        .HasColumnType("int");

                    b.HasKey("OrderId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Marketing.Models.OrderDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("OrderId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Qauntity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrdersDetails");
                });

            modelBuilder.Entity("Marketing.Models.Product", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("ImgUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProductCategoryID")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("ProductDescription")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ProductPrise")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ID");

                    b.HasIndex("ProductCategoryID");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            ImgUrl = "images/products/1.jpg",
                            ProductCategoryID = 1,
                            ProductDescription = "some thing",
                            ProductName = "t-shert",
                            ProductPrise = 30.99m
                        },
                        new
                        {
                            ID = 2,
                            ImgUrl = "images/products/2.jpg",
                            ProductCategoryID = 1,
                            ProductDescription = "some thing 2",
                            ProductName = "jaket",
                            ProductPrise = 98.55m
                        },
                        new
                        {
                            ID = 3,
                            ImgUrl = "images/products/3.jpg",
                            ProductCategoryID = 1,
                            ProductDescription = "some thing 3",
                            ProductName = "hoddy",
                            ProductPrise = 98.55m
                        },
                        new
                        {
                            ID = 4,
                            ImgUrl = "images/products/4.jpg",
                            ProductCategoryID = 2,
                            ProductDescription = "some thing 4",
                            ProductName = "t-shert",
                            ProductPrise = 30.99m
                        },
                        new
                        {
                            ID = 5,
                            ImgUrl = "images/products/5.jpg",
                            ProductCategoryID = 2,
                            ProductDescription = "some thing 5",
                            ProductName = "jaket",
                            ProductPrise = 98.55m
                        },
                        new
                        {
                            ID = 6,
                            ImgUrl = "images/products/6.jpg",
                            ProductCategoryID = 2,
                            ProductDescription = "some thing 6",
                            ProductName = "hoddy",
                            ProductPrise = 98.55m
                        },
                        new
                        {
                            ID = 7,
                            ImgUrl = "images/products/7.jpg",
                            ProductCategoryID = 3,
                            ProductDescription = "some thing 7",
                            ProductName = "t-shert",
                            ProductPrise = 30.99m
                        },
                        new
                        {
                            ID = 8,
                            ImgUrl = "images/products/8.jpg",
                            ProductCategoryID = 3,
                            ProductDescription = "some thing 8",
                            ProductName = "jaket",
                            ProductPrise = 98.55m
                        },
                        new
                        {
                            ID = 9,
                            ImgUrl = "images/products/9.jpg",
                            ProductCategoryID = 3,
                            ProductDescription = "some thing 9",
                            ProductName = "hoddy",
                            ProductPrise = 98.55m
                        });
                });

            modelBuilder.Entity("Marketing.Models.ShopingCart", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("CustomerID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("ProductID")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CustomerID");

                    b.HasIndex("ProductID");

                    b.ToTable("ShopingCarts");
                });

            modelBuilder.Entity("Marketing.Models.Order", b =>
                {
                    b.HasOne("Marketing.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Marketing.Models.OrderDetail", b =>
                {
                    b.HasOne("Marketing.Models.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Marketing.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Marketing.Models.Product", b =>
                {
                    b.HasOne("Marketing.Models.Category", "ProductCategory")
                        .WithMany("Products")
                        .HasForeignKey("ProductCategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductCategory");
                });

            modelBuilder.Entity("Marketing.Models.ShopingCart", b =>
                {
                    b.HasOne("Marketing.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Marketing.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Marketing.Models.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Marketing.Models.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
